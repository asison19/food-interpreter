name: 'Run Lexer Tests'
run-name: 'Run Lexer Tests'
on: [push]
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: '1.23.0'
          cache-dependency-path: "**/*.sum" # TODO, new error, "Restore cache failed: Some specified paths were not resolved, unable to cache dependencies."
          cache: true
      - name: Run Lexer tests
        run: cd lexer && go test -v
  generate-release:
    needs: [run-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v4
        with:
          node-version: 20.8.1
      - name: Dry run to get the next release version
        id: tag_version
        run: |
          export VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Generate release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
  push-docker-image: # TODO empty check if no release?
    needs: [run-tests, generate-release]
    environment: prod
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Setup Github Actions checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Workload Identity Federation
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: 'projects/${{ vars.GCP_WIF_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
      - name: Get Short GitHub SHA
        run: echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Build Docker Image
        run: 'docker build -t food-interpreter .'
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID }}
            GCP_PROJECT_REGION=${{ vars.GCP_PROJECT_REGION }}
          tags: |
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/food-interpreter-repository/food-interpreter:latest
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/food-interpreter-repository/food-interpreter:${{ env.SHA_SHORT }}
            us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/food-interpreter-repository/food-interpreter:${{ needs.generate-release.outputs.version }}
      - name: Update Cloud Run Service to latest image
        run: gcloud run services update ${{ vars.GCP_CLOUD_RUN_SERVICE_NAME }} --image us-central1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/food-interpreter-repository/food-interpreter:latest --region ${{ vars.GCP_PROJECT_REGION }}
