name: 'Deploy GKE kubernetes cluster'
run-name: 'Deploy GKE kubernetes cluster'
on: [workflow_dispatch]
jobs:
  terraform-plan:
    environment: prod
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Github Actions checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/${{ vars.GCP_WIF_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
      - name: Terraform action
        uses: asison19/github-actions/composite-actions/terraform-action@v1.3.1
        with:
          working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
      - name: Run Terraform Plan
        run: |
          terraform plan
          echo "version:" ${{ needs.generate-release.outputs.version }}
        working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
        env:
          TF_VAR_GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_GCP_PROJECT_REGION: ${{ vars.GCP_PROJECT_REGION }}
  terraform-apply:
    needs: [generate-release, terraform-plan]
    environment: prod
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Github Actions checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/${{ vars.GCP_WIF_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
      - name: Terraform action
        uses: asison19/github-actions/composite-actions/terraform-action@v1.3.1
        with:
          working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
      - name: Run Terraform Apply
        run: |
          terraform apply -auto-approve
          echo "version:" ${{ needs.generate-release.outputs.version }}
        working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
        env:
          TF_VAR_GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_GCP_PROJECT_REGION: ${{ vars.GCP_PROJECT_REGION }}
  terraform-destroy:
    needs: [generate-release, terraform-apply]
    environment: prod
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Github Actions checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          workload_identity_provider: 'projects/${{ vars.GCP_WIF_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}'
      - name: Terraform action
        uses: asison19/github-actions/composite-actions/terraform-action@v1.3.1
        with:
          working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
      - name: Run Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ${{ github.workspace }}/iac/terraform/kubernetes
        env:
          TF_VAR_GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_GCP_PROJECT_REGION: ${{ vars.GCP_PROJECT_REGION }}
